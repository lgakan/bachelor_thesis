from datetime import timedelta
from typing import List, Union

import pandas as pd

from lib.config import Config, PhotovoltaicDirection
from scripts.file_management import DfManager


class Pv:
    """
    A class representing household photovoltaic system.

    Attributes:
        production (float): The amount of energy generated by photovoltaics expressed in kWh.
        csv_file (CSVFile): The CSVFile class object for csv files management.
        size (float): The size of photovoltaic installation expressed in kWp.
        efficiency (int): The efficiency of photovoltaic installation expressed in percentages.
        direction (PhotovoltaicDirection): The photovoltaic installation: east-west or south.
    """

    def __init__(self,
                 date_column: Union[None, str] = None,
                 production: float = 0.0,
                 size: float = 10.0,  # TODO: Not implemented!
                 efficiency: int = 100,  # TODO: Not implemented!
                 direction: PhotovoltaicDirection = PhotovoltaicDirection.EAST_WEST):  # TODO: Not implemented!
        self.production = production
        self.df_manager = DfManager(Config.DATA_ENERGY_PRODUCTION, date_column)
        self.size = size
        self.efficiency = efficiency
        self.direction = direction
        self.date_column = date_column

    def get_production_by_date(self, date_start: pd.Timestamp, date_end: Union[pd.Timestamp, None] = None) -> Union[List[float], float]:
        if date_end is None:
            if not self.df_manager.is_date_in_file(self.date_column, date_start):
                raise Exception(f"Date: {date_start} is not valid")
            return self.df_manager.get_cell_by_date(self.date_column, date_start, "PV gen (kW)")
        else:
            if not (self.df_manager.is_date_in_file(self.date_column, date_start) or self.df_manager.is_date_in_file(self.date_column, date_end)):
                raise Exception(f"Date column {date_start} or {date_end} is not valid")
            dates = pd.date_range(start=date_start, end=date_end, freq=timedelta(hours=1))
            return [self.df_manager.get_cell_by_date(self.date_column, x, "PV gen (kW)") for x in dates]


# Example
# if __name__ == "__main__":
#     pv = Pv(date_column="Date")
#     print(pv.get_production_by_date(pd.to_datetime("01.01.2015 06:00:00")))
